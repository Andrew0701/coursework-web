// Generated by CoffeeScript 1.10.0
var all_checking, block_submit_student, delMessageAfter, errorMessageAfter, give_the_massiv, listener_on_change, successMessageAfter, validate, validateEmail, validateLogin, validatePassword, validatePasswordConfirmation, validateWord;

all_checking = {};

delMessageAfter = function(element) {
  if (element.next().is('span')) {
    element.next().remove();
  }
  
};

errorMessageAfter = function(element, text) {
  var message;
  delMessageAfter(element);
  $(element).parent('div').attr('class', 'form-group has-error has-feedback');
  message = $('<span class=\'glyphicon glyphicon-remove form-control-feedback\' aria-hidden=\'true\'></span>');
  $('[data-toggle="popover"]').popover('show');
  $(element).after(message);
};

successMessageAfter = function(element) {
  var message;
  delMessageAfter(element);
  $(element).parent('div').attr('class', 'form-group has-success has-feedback');
  message = $('<span class=\'glyphicon glyphicon-ok form-control-feedback\' aria-hidden=\'true\'></span>');
  $(element).after(message);
};

validate = function(element, pattern, errorMessage) {
  var text;
  text = element.val();
  if (pattern.test(text)) {
    successMessageAfter(element);
    all_checking[element.attr('name')] = true;
    block_submit_student();
    return true;
  } else {
    errorMessageAfter(element, errorMessage);
    all_checking[element.attr('name')] = false;
    block_submit_student();
    return false;
  }
};

validateWord = function(element) {
  return validate(element, /^[а-яА-ЯёЁ]{3,30}$/, 'Только кириллица (3-30)');
};

validateLogin = function(element) {
  return validate(element, /^[a-zA-Z]{3,30}$/, 'Только латинница (3-30)');
};

validateEmail = function(element) {
  return validate(element, /^[a-z0-9\._-]+@[a-z-]+\.[a-z]+$/, 'Как обычно кароч');
};

validatePassword = function(element) {
  return validate(element, /^[a-zA-Z0-9_]{6,30}$/, 'Латинница, цифры, _ (6-30)');
};

validatePasswordConfirmation = function(element, id) {
  var firstPassword;
  firstPassword = $('input[name=password][id=' + id).val();
  return validate(element, RegExp('^' + firstPassword + '$'), 'Пароли не совпадают');
};

block_submit_student = function() {
  var count_right_values, need_count_right, val;
  count_right_values = 0;
  need_count_right = 7;
  for (val in all_checking) {
    if (all_checking[val]) {
      count_right_values++;
    }
  }
  if (count_right_values >= need_count_right) {
    $('input[type=submit]').prop('disabled', false);
  } else {
    $('input[type=submit]').prop('disabled', true);
  }
};

listener_on_change = function() {
  $('#reg_student').prop('disabled', true);
  $('#reg_student').mouseover(give_the_massiv);
};

give_the_massiv = function() {
  var val;
  for (val in all_checking) {
    console.log(val);
  }
  console.log(all_checking);
};
